## 2022-08-01
# Copying plugins into www/js folder

deps=$(find plugins -name "*.js" -type f)
for dep in $deps; do
  filepath=$(echo $dep | cut -d'/' -f2,3)
  dirpath=$(echo $dep | cut -d'/' -f2)
  mkdir -p www/js/$dirpath
  cp -rf $dep www/js/$filepath
done

## 2022-08-02
# Experimenting with webpack ... unfortunately

# install webpack generally
sudo npm install webpack webpack-cli --global

# build webpack dist
webpack build ./index.js
# - Need to install modules: fs path stream zlib
# npm install fs path stream zlib --save-dev

# serve webpack
npx webpack serve

## Forget all that.. Just do this for the voxelmetaverse project:
npm install beefy
npm run start

## 2022-08-03
# Replace voxel-engine-stackgl with voxel-engine

files=$(grep -raw "voxel-engine-stackgl" | cut -d':' -f1)
for file in $files; do
  sed -i 's/voxel-engine-stackgl/voxel-engine/g' $file
done
rm -rf node_modules/voxel-engine-stackgl
npm install
npm run start

## 2022-08-12
# need to change calls to gl with calls to three.js
# looks like current errors relate to using gl vs three.js

## 2022-08-15
# The issue with the item collisions was because the collideTerrain
#  method from voxel-engine-stackgl used the wrong vec format for
#  the collisions function

####
# voxel-view initializes renderer
# accepts scene to link to scene (not sure how THREE.view works...)

## 2022-09-08
# mesh.js for creating voxel meshes
# current problem with artpacks appears to be because of url loading, not
# actually getting the artpack data, which has already been loaded.

## 2022-09-09
# I suspect the arguments in webworkify.js correspond to the arguments passed to
# '.call' in the initial function of builtgame.js
